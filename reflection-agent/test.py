messages=[HumanMessage(content='Make this tweet better:"\n                                    @LangChainAI\n            — newly Tool Calling feature is seriously underrated.\n\n            After a long wait, it\'s  here- making the implementation of agents across different models with function calling - super easy.\n\n            Made a video covering their newest blog post\n\n                                  ', additional_kwargs={}, response_metadata={}, id='8e0d4a78-9502-42a0-ac4f-302193e88f40'), AIMessage(content='🚀 Exciting news from @LangChainAI! The newly launched Tool Calling feature is a game-changer for implementing agents across various models. 🎉 After much anticipation, it’s finally here to simplify your workflow like never before! \n\n🎥 Check out my latest video where I dive into their newest blog post and explore all the amazing possibilities! #AI #LangChain #TechInnovation', additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 78, 'prompt_tokens': 112, 'total_tokens': 190, 'completion_tokens_details': {'audio_tokens': 0, 'reasoning_tokens': 0, 'accepted_prediction_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-4o-mini-2024-07-18', 'system_fingerprint': 'fp_0ba0d124f1', 'finish_reason': 'stop', 'logprobs': None}, id='run-b6a8c09a-d01d-48ef-8978-b82e0084cc46-0', usage_metadata={'input_tokens': 112, 'output_tokens': 78, 'total_tokens': 190, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}}), HumanMessage(content='**Critique:**\n\nYour original tweet has a solid foundation, but there are several areas where it can be improved to enhance engagement and clarity. Here’s a breakdown of your tweet:\n\n1. **Length and Clarity**: The tweet feels a bit disjointed due to its length and structure. Shorter, more concise tweets often perform better on Twitter, especially if they get to the point quickly.\n\n2. **Hook**: Your tweet lacks a strong hook at the beginning. Starting with an engaging question or statement can draw in your audience more effectively.\n\n3. **Emojis**: While you included some text, using emojis can make your tweet visually appealing and help convey excitement. However, moderation is key — too many can be distracting.\n\n4. **Call to Action**: The call to action is somewhat buried. It’s important to make it clear what you want your followers to do (e.g., watch the video, read the blog post).\n\n5. **Hashtags**: Including a couple of relevant hashtags can increase the visibility of your tweet and help reach a broader audience.\n\n**Recommendations:**\n\n1. **Start with a Hook**: Consider beginning with a strong statement that captures attention, like “Revolutionary tool alert! 🚀” or “Are you ready to simplify your workflow?”\n\n2. **Be Concise**: Aim to condense your points. For example, instead of saying "After a long wait, it’s here," you could say "Finally here!" \n\n3. **Use Emojis Wisely**: A few well-placed emojis can enhance your message. For instance, use a rocket emoji for excitement and a video camera emoji when mentioning your video.\n\n4. **Clear Call to Action**: Make it explicit that you want your audience to check out your video and the blog post. Consider saying “Watch my video for the full breakdown!”\n\n5. **Hashtags**: Add relevant hashtags to boost discoverability. Suggestions: #AI, #TechInnovation, #LangChain.\n\n**Revised Tweet Example:**\n\n🌟 Revolutionary tool alert! @LangChainAI\'s new Tool Calling feature is here, and it\'s a total game-changer for implementing agents across models! 🚀\n\n💡 Ready to simplify your workflow? Watch my video for a breakdown of their latest blog post! \n\n👉 #AI #LangChain #TechInnovation\n\nBy following these recommendations, your tweet will be more engaging, concise, and likely to go viral!', additional_kwargs={}, response_metadata={}, id='bc2a787d-5c5b-4334-8d7c-22467ab733f7'), AIMessage(content="Thanks for the detailed feedback! Here’s a revised version of the tweet, incorporating your suggestions:\n\n🌟 Revolutionary tool alert! @LangChainAI's new Tool Calling feature has arrived, and it's a total game-changer for implementing agents across models! 🚀 \n\n💡 Ready to simplify your workflow? Watch my video for a breakdown of their latest blog post! 👉 \n\n#AI #LangChain #TechInnovation\n\nHow does this version resonate with you?", additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 92, 'prompt_tokens': 700, 'total_tokens': 792, 'completion_tokens_details': {'audio_tokens': 0, 'reasoning_tokens': 0, 'accepted_prediction_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-4o-mini-2024-07-18', 'system_fingerprint': 'fp_0ba0d124f1', 'finish_reason': 'stop', 'logprobs': None}, id='run-dd71a125-1cee-4440-bd41-62f44cfe2345-0', usage_metadata={'input_tokens': 700, 'output_tokens': 92, 'total_tokens': 792, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}}), HumanMessage(content='This revised tweet looks great! It effectively captures attention with a strong hook, uses emojis to enhance visual appeal, and includes a clear call to action. Here’s a quick breakdown of what works well in this version:\n\n1. **Strong Hook**: Starting with "Revolutionary tool alert!" instantly grabs the reader\'s attention.\n\n2. **Concise Messaging**: The message is clear and to the point, making it easy for followers to understand the significance of the Tool Calling feature.\n\n3. **Effective Use of Emojis**: The strategic placement of emojis adds excitement without overwhelming the text.\n\n4. **Clear Call to Action**: Inviting followers to "Watch my video" directly encourages engagement.\n\n5. **Relevant Hashtags**: Including hashtags like #AI and #TechInnovation not only increases discoverability but also positions your tweet within relevant conversations.\n\n**Additional Recommendations for Maximum Impact**:\n\n- **Tag Relevant Accounts**: If you mentioned any specific features or individuals in your video, consider tagging them to increase engagement and visibility.\n  \n- **Engage Your Audience**: You might want to pose a question at the end, such as “What are your thoughts on this feature?” to encourage replies and interaction.\n\n- **Timing**: Make sure to post when your target audience is most active for better visibility.\n\nOverall, this tweet is well on its way to achieving higher engagement and shares! If you implement any of these additional suggestions, it could further enhance its performance. Great job! 🎉', additional_kwargs={}, response_metadata={}, id='aae3f7a9-0de0-40af-b717-ab0da3a5b2e1'), AIMessage(content="I appreciate your positive feedback! Here’s a final version of the tweet incorporating your additional recommendations:\n\n🌟 Revolutionary tool alert! @LangChainAI's new Tool Calling feature has arrived, and it's a total game-changer for implementing agents across models! 🚀 \n\n💡 Ready to simplify your workflow? Watch my video for a breakdown of their latest blog post! 👉 \n\nWhat are your thoughts on this feature? Let me know! \n\n#AI #LangChain #TechInnovation\n\nAlso, if there are any specific accounts or individuals to tag, you could add them right after the mention of @LangChainAI for even more engagement. \n\nThanks for collaborating on this! If you need anything else, feel free to ask. 🎉", additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 148, 'prompt_tokens': 1103, 'total_tokens': 1251, 'completion_tokens_details': {'audio_tokens': 0, 'reasoning_tokens': 0, 'accepted_prediction_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 0}}, 'model_name': 'gpt-4o-mini-2024-07-18', 'system_fingerprint': 'fp_0ba0d124f1', 'finish_reason': 'stop', 'logprobs': None}, id='run-18e88036-36f2-447b-8cdc-744cd759b33f-0', usage_metadata={'input_tokens': 1103, 'output_tokens': 148, 'total_tokens': 1251, 'input_token_details': {'audio': 0, 'cache_read': 0}, 'output_token_details': {'audio': 0, 'reasoning': 0}}), HumanMessage(content="I'm glad you liked the revisions! The final version of your tweet looks fantastic and is well-optimized for engagement. Here’s the polished tweet one last time for clarity:\n\n🌟 Revolutionary tool alert! @LangChainAI's new Tool Calling feature has arrived, and it's a total game-changer for implementing agents across models! 🚀 \n\n💡 Ready to simplify your workflow? Watch my video for a breakdown of their latest blog post! 👉 \n\nWhat are your thoughts on this feature? Let me know! \n\n#AI #LangChain #TechInnovation\n\n**Final Tips:**\n\n1. **Tag Relevant Accounts**: If you have influencers or experts in mind, tag them to broaden reach.\n  \n2. **Post Timing**: Share it during peak hours when your audience is most active to maximize visibility.\n\n3. **Engagement Strategy**: Respond to comments and engage with any discussions that arise to maintain momentum.\n\nFeel free to reach out if you need further assistance or have more content to refine. Best of luck with your tweet! 🎉", additional_kwargs={}, response_metadata={}, id='652c3b6a-0619-433c-a33e-e298d83f040e'), AIMessage(content="Thank you for the encouragement! Here’s the final polished tweet once more for clarity:\n\n🌟 Revolutionary tool alert! @LangChainAI's new Tool Calling feature has arrived, and it's a total game-changer for implementing agents across models! 🚀 \n\n💡 Ready to simplify your workflow? Watch my video for a breakdown of their latest blog post! 👉 \n\nWhat are your thoughts on this feature? Let me know! \n\n#AI #LangChain #TechInnovation\n\n**Final Tips**:\n1. **Tag Relevant Accounts**: Consider tagging key influencers or experts to broaden your reach.\n2. **Post Timing**: Schedule your tweet during peak hours for maximum visibility.\n3. **Engagement Strategy**: Make sure to respond to comments to foster discussion and keep the engagement going!\n\nIf you have more content to refine or need any further assistance, just let me know. Good luck with the tweet! 🎉", additional_kwargs={'refusal': None}, response_metadata={'token_usage': {'completion_tokens': 185, 'prompt_tokens': 1470, 'total_tokens': 1655, 'completion_tokens_details': {'audio_tokens': 0, 'reasoning_tokens': 0, 'accepted_prediction_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 1024}}, 'model_name': 'gpt-4o-mini-2024-07-18', 'system_fingerprint': 'fp_0ba0d124f1', 'finish_reason': 'stop', 'logprobs': None}, id='run-f76a70c3-b15e-4b95-ba7f-2f77b4569d85-0', usage_metadata={'input_tokens': 1470, 'output_tokens': 185, 'total_tokens': 1655, 'input_token_details': {'audio': 0, 'cache_read': 1024}, 'output_token_details': {'audio': 0, 'reasoning': 0}})]


# Extract and print the content from each message
# for message in messages:
#     message_type = type(message).__name__  # Identifies if it's HumanMessage or AIMessage
#     content = message.content              # Extracts the main text content
#     print(f"{message_type}: {content}\n")

for message in messages:
    message_type = type(message).__name__
    content = message.content
    message_id = message.id
    additional_kwargs = message.additional_kwargs
    response_metadata = message.response_metadata
    usage_metadata = message.usage_metadata
    
    print(f"{message_type} ID: {message_id}")
    print(f"Content: {content}")
    print(f"Additional kwargs: {additional_kwargs}")
    print(f"Response Metadata: {response_metadata}")
    print(f"Usage Metadata: {usage_metadata}\n")
    
    import json

parsed_messages = [
    {
        "type": type(message).__name__,
        "content": message.content,
        "id": message.id,
        "additional_kwargs": message.additional_kwargs,
        "response_metadata": message.response_metadata,
        "usage_metadata": message.usage_metadata,
    }
    for message in messages
]

# Convert to JSON string for easy readability or storage
parsed_messages_json = json.dumps(parsed_messages, indent=4)
print(parsed_messages_json)

